play with docker

    ###Bridge: containers na mesma rede conseguem se comunicar

docker network ls

docker network create -d bridge petsBridge

docker run -d --net petsBridge --name db consul
docker run -d --env "DB=db" --net petsBridge --name web -p 8000:5000 chrch/docker-pets:1.0

    ###Host: n√£o seleciona a porta

docker run -d --net host --name db consul
docker run -d --env "DB=localhost" --net host --name web chrch/docker-pets:1.0

netstat -nltp

    ###Overlay: containers em hosts diferentes

docker network create -d bridge petsBridge

#server 1
docker run -d --env "DB=db" --net petsBridge --name web -p 8000:5000 chrch/docker-pets:1.0
#server 2
docker run -d --net petsBridge --name db consul

#configurar cluster swarm

docker swarm init --advertise-addr 192.168.0.18

#exemplo: colocar em n servidores para fazer parte do cluster swarm
docker swarm join --token SWMTKN-1-5z8q9bs7e074oclo12nj40kvrui27pb96f6v9rhlahjsapvdod-2oqvlbag953bhd9t1zmft4ud3 192.168.0.18:2377

docker node ls

#criar rede overlay
docker network create -d overlay petsOverlay

docker service create --network petsOverlay --name db consul
docker service create --network petsOverlay -p 8000:5000 -e "DB=db" --name web chrch/docker-pets:1.0

#teste
docker exec -it <container-id> sh
hostname

#escalonar web, balanceamento de carga
docker service scale web=3


